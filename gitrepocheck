#!/bin/bash

# 'gitRepoCheck'. Check GIT repositories for changed stuff.
# Copyright Â© 2015-2017 Mathias Bocquet <mbocquet@sekoya.org>

while getopts ":h:p:s:" opts
do
  case $opts in
    p)
        PATHTOCHECK="$OPTARG"
        ;;
    s)
        SKIP="$OPTARG"
        ;;
    \?|*|h)
        printf "Usage : $(basename $0) [ -p <path>] [-s <skiped dir>]\n"
        exit 0
        ;;
  esac
done

# Create a temporary file with this script name as prefix
TMPFILE="$(tempfile -p $(basename $0))"

for REPO in $(find ${PATHTOCHECK} -xdev -type d -name .git)
do
    # Strip '/.git' part of the REPO
    DIR=$(echo ${REPO}|sed 's;/.git;;')
    # Do the action if $SKIP is empty or if $DIR doesn't contains $SKIP
    if [ -z "${SKIP}" ] || ! [[ "${DIR}" =~ "${SKIP}" ]]
    then
        cd ${DIR}
        git status > ${TMPFILE}
        # if git status report nothing to commit, it looks like these two following
        # lines :
        # On branch master
        # nothing to commit, working directory clean
        # So if the last sentence, is not found, print the git status output
        if ! grep -q "nothing to commit.*working.*clean" ${TMPFILE}
        then
            printf "GIT repository at ${HOSTNAME}:${DIR} has changed\n"
            cat ${TMPFILE}
        fi
        cd - >/dev/null
        # Blank the temporary file
        >${TMPFILE}
    fi
done

rm ${TMPFILE}
